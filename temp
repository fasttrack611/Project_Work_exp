Sample Project: "HelloCMakeApp"
📁 Project Structure

HelloCMakeApp/
├── CMakeLists.txt
├── include/
│   └── hello.h
├── src/
│   └── hello.cpp
└── main.cpp
📄 1. CMakeLists.txt
cmake

cmake_minimum_required(VERSION 3.15)
project(HelloCMakeApp VERSION 1.0 LANGUAGES CXX)

# C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Include directory
include_directories(include)

# Source files
add_executable(hello_app
    main.cpp
    src/hello.cpp
)
📄 2. main.cpp
cpp
Copy
Edit
#include "hello.h"

int main() {
    say_hello();
    return 0;
}
📄 3. include/hello.h
cpp

#ifndef HELLO_H
#define HELLO_H

void say_hello();

#endif
📄 4. src/hello.cpp
cpp
Copy
Edit
#include <iostream>
#include "hello.h"

void say_hello() {
    std::cout << "Hello from CMake project!" << std::endl;
}
🚀 Build & Run Instructions (Command Line)
bash

cd HelloCMakeApp
mkdir build && cd build
cmake ..
cmake --build .
./hello_app    # On Linux/Mac
hello_app.exe  # On Windows
🎯 Build & Run in Visual Studio
Open Visual Studio.

Click File → Open → CMake... and select the HelloCMakeApp folder.

Set hello_app as the startup target.

Click Ctrl + F5 to run.
